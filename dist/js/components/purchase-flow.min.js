"use strict";angular.module("risevision.common.components.purchase-flow",["risevision.store.authorization","risevision.common.config","risevision.common.gapi","risevision.common.geodata","risevision.common.currency","risevision.common.components.loading","risevision.core.countries","ui.bootstrap"]),angular.module("risevision.common.components.purchase-flow").service("addressFactory",["$q","$log","userState","storeService","updateCompany","updateUser","addressService","contactService",function(e,t,a,r,n,o,i,s){var l={},c=function(e,t){var a={name:e.name,street:t.line1,unit:t.line2&&t.line2.length?t.line2:"",city:t.city,postalCode:t.postalCode,province:t.region,country:t.country};return i.addressesAreIdentical(e,a)};l.validateAddress=function(a){return a.validationError=!1,"CA"!==a.country&&"US"!==a.country?(t.debug("Address Validation skipped for country: ",a.country),e.resolve()):r.validateAddress(a).then(function(e){c(a,e)||t.error("Validated address differs from entered address: ",a,e)})["catch"](function(e){a.validationError=e.message?e.message:"Unknown Error"})};var d=function(e,t){if(t){var r=a.getCopyOfSelectedCompany(!0);angular.extend(r,e),a.updateCompanySettings(r)}else if(e.id===a.getUserCompanyId()){var n=a.getCopyOfUserCompany(!0);angular.extend(n,e),a.updateCompanySettings(n)}};return l.updateAddress=function(r,o,s){var l=e.defer(),c=s?i.copyAddressFromShipTo(a.getCopyOfSelectedCompany()):a.getCopyOfUserCompany(),p={},m=!1;if(!s){var u=c.billingContactEmails||[],h=o&&o.email;h&&u.indexOf(h)===-1&&(u.unshift(h),p.billingContactEmails=u,m=!0)}return r&&!i.addressesAreIdentical(r,c)||m?(s?i.copyAddressToShipTo(r,p):i.copyAddress(r,p),t.info("Company Fields changed. Saving..."),n(p.id,p).then(function(){d(p,s),t.info("Company Fields saved."),l.resolve()})["catch"](function(){t.info("Error saving Company Fields."),l.reject("Error saving Company Fields.")})):l.resolve(),l.promise},l.updateContact=function(r){var n=e.defer(),i=a.getCopyOfProfile();return r&&!s.contactsAreIdentical(r,i)?(t.info("Contact information changed. Saving..."),o(a.getUsername(),r).then(function(){var e=a.getCopyOfProfile(!0);s.copyContactObj(r,e),a.updateUserProfile(e),t.info("Contact information saved."),n.resolve()})["catch"](function(){t.info("Error saving Contact information."),n.reject("Error saving Contact information.")})):n.resolve(),n.promise},l}]),angular.module("risevision.common.components.purchase-flow").service("addressService",[function(){this.copyAddress=function(e,t){return t||(t={}),t.id=e.id,t.name=e.name,t.street=e.street,t.unit=e.unit,t.city=e.city,t.country=e.country,t.postalCode=e.postalCode,t.province=e.province,t},this.copyAddressFromShipTo=function(e,t){return t||(t={}),t.id=e.id,t.name=e.shipToName,t.street=e.shipToStreet,t.unit=e.shipToUnit,t.city=e.shipToCity,t.country=e.shipToCountry,t.postalCode=e.shipToPostalCode,t.province=e.shipToProvince,t},this.copyAddressToShipTo=function(e,t){return t||(t={}),t.id=e.id,t.shipToName=e.name,t.shipToStreet=e.street,t.shipToUnit=e.unit,t.shipToCity=e.city,t.shipToCountry=e.country,t.shipToPostalCode=e.postalCode,t.shipToProvince=e.province,t},this.addressesAreIdentical=function(e,t){return t.name===e.name&&t.street===e.street&&t.unit===e.unit&&t.city===e.city&&t.country===e.country&&t.postalCode===e.postalCode&&t.province===e.province}}]),angular.module("risevision.common.components.purchase-flow").service("contactService",[function(){this.contactsAreIdentical=function(e,t){return e.firstName===t.firstName&&e.lastName===t.lastName&&e.email===t.email&&e.telephone===t.telephone},this.copyContactObj=function(e,t){return t||(t={}),t.username=e.username,t.firstName=e.firstName,t.lastName=e.lastName,t.email=e.email,t.telephone=e.telephone,t}}]),function(e){e.module("risevision.common.components.purchase-flow").constant("RPP_ADDON_ID","c4b368be86245bf9501baaa6e0b00df9719869fd").factory("purchaseFactory",["$rootScope","$q","$log","$modal","$templateCache","$timeout","userState","storeService","stripeService","addressService","contactService","purchaseFlowTracker","RPP_ADDON_ID",function(t,a,r,n,o,i,s,l,c,d,p,m,u){var h={};h.loading=!1;var v=function(t,a){h.purchase={},h.purchase.plan=e.copy(t),h.purchase.plan.additionalDisplayLicenses=0,h.purchase.plan.isMonthly=a,h.purchase.billingAddress=d.copyAddress(s.getCopyOfUserCompany()),h.purchase.shippingAddress=d.copyAddressFromShipTo(s.getCopyOfSelectedCompany()),h.purchase.contact=p.copyContactObj(s.getCopyOfProfile()),h.purchase.paymentMethods={paymentMethod:"card",existingCreditCards:[],newCreditCard:{isNew:!0,address:{},useBillingAddress:!0,billingAddress:h.purchase.billingAddress}};var r=new Date;r.setDate(r.getDate()+30),h.purchase.paymentMethods.invoiceDate=r,h.purchase.paymentMethods.selectedCard=h.purchase.paymentMethods.newCreditCard,h.purchase.estimate={},m.trackProductAdded(h.purchase.plan)};h.showPurchaseModal=function(e,t){v(e,t);var a=n.open({template:o.get("purchase-flow/purchase-modal.html"),controller:"PurchaseModalCtrl",size:"md",backdrop:"static"});return a.result},h.showTaxExemptionModal=function(){var e=n.open({template:o.get("purchase-flow/tax-exemption.html"),controller:"TaxExemptionModalCtrl",size:"md",backdrop:"static"});return e.result.then(function(e){h.purchase.taxExemptionSent=e})};var f=function(e,t){return e.validationErrors=c.validateCard(e,t),!(!e.validationErrors||e.validationErrors.length>0)};h.validatePaymentMethod=function(){var e=h.purchase.paymentMethods,t=a.defer();if("invoice"===e.paymentMethod)t.resolve();else if("card"===e.paymentMethod)if(e.selectedCard.isNew){if(f(e.newCreditCard,!0)){var r=e.newCreditCard.address;return e.newCreditCard.useBillingAddress&&(r=e.newCreditCard.billingAddress),h.loading=!0,c.createToken(e.newCreditCard,r).then(function(t){e.newCreditCard.id=t.id,e.newCreditCard.last4=t.card.last4,e.newCreditCard.cardType=t.card.type})["finally"](function(){h.loading=!1})}t.reject()}else f(e.selectedCard,!1)?t.resolve():t.reject();return t.promise};var g=function(){return h.purchase.plan.isMonthly?"01m":"01y"},b=function(){return"CA"===h.purchase.billingAddress.country?"cad":"usd"},y=function(){return h.purchase.plan.productCode+"-"+b()+g()},x=function(){return u+"-"+b()+g()+h.purchase.plan.productCode.substring(0,3)};h.getEstimate=function(){return h.purchase.estimate={currency:b()},h.loading=!0,l.calculateTaxes(h.purchase.billingAddress.id,y(),x(),h.purchase.plan.additionalDisplayLicenses,h.purchase.shippingAddress).then(function(e){var t=h.purchase.estimate;t.taxesCalculated=!0,t.taxes=e.taxes||[],t.total=e.total,t.totalTax=e.totalTax,t.shippingTotal=e.shippingTotal,m.trackPlaceOrderClicked(t)})["catch"](function(e){h.purchase.estimate.estimateError=e&&e.message?e.message:"An unexpected error has occurred. Please try again."})["finally"](function(){h.loading=!1})};var w=function(){var e=[{id:y()},{id:x(),qty:h.purchase.plan.additionalDisplayLicenses}],t=h.purchase.paymentMethods.selectedCard,a="invoice"===h.purchase.paymentMethods.paymentMethod?null:{cardId:t.id,isDefault:!!t.isDefault},r={billTo:d.copyAddress(h.purchase.billingAddress),shipTo:d.copyAddress(h.purchase.shippingAddress),items:e,purchaseOrderNumber:h.purchase.paymentMethods.purchaseOrderNumber,card:a};return JSON.stringify(r)};return h.completePayment=function(){var e=w();return h.purchase.checkoutError=null,h.loading=!0,l.purchase(e).then(function(){h.purchase.reloadingCompany=!0,m.trackOrderPayNowClicked(h.purchase.estimate),i(1e4).then(function(){return s.reloadSelectedCompany()}).then(function(){t.$emit("risevision.company.trial.started")})["catch"](function(e){r.debug("Failed to reload company",e)})["finally"](function(){h.purchase.reloadingCompany=!1})})["catch"](function(e){h.purchase.checkoutError=e&&e.message?e.message:"There was an unknown error with the payment."})["finally"](function(){h.loading=!1})},h}])}(angular),angular.module("risevision.common.components.purchase-flow").factory("stripeLoader",["$q","$interval","$window","userState","STRIPE_PROD_KEY","STRIPE_TEST_KEY",function(e,t,a,r,n,o){var i=e.defer(),s=setInterval(function(){a.Stripe&&(t.cancel(s),i.resolve(a.Stripe))},50);return function(){return i.promise.then(function(e){var t=r.getCopyOfUserCompany().isTest;return e.setPublishableKey(t?o:n),e})}}]),angular.module("risevision.common.components.purchase-flow").constant("STRIPE_ERRORS",{invalid_number:"Invalid Card Number.",incorrect_number:"Invalid Card Number.",invalid_cvc:"Invalid Security Code.",incorrect_cvc:"Invalid Security Code.",invalid_expiry_month:"Invalid Exp. Month.",invalid_expiry_year:"Invalid Exp. Year.",incorrect_zip:"Invalid ZIP / Postal Code. The ZIP / Postal Code provided is not associated with the billing address of this card.",expired_card:"The card provided has expired.",card_declined:"The card was declined. Please confirm all information is correct. If the problem continues try a different card.",missing:"No card associated with the account.",processing_error:"An unexpected error has occurred. Please try again."}).service("stripeService",["$q","$log","$window","stripeLoader","STRIPE_ERRORS",function(e,t,a,r,n){this.validateCard=function(e,t){var r=[];return a.Stripe?(t&&(e.number=e.number?e.number.trim():"",a.Stripe.card.validateCardNumber(e.number)||r.push(n.invalid_number),a.Stripe.card.validateCVC(e.cvc)||r.push(n.invalid_cvc)),a.Stripe.card.validateExpiry(e.expMonth,e.expYear)||r.push("Invalid Expiry Date."),r):(r.push(n.processing_error),r)};var o=function(e){var t=n[e];return t||(t=n.processing_error),t};this.createToken=function(a,n){var i=e.defer();a.tokenError=null;var s={number:a.number,cvc:a.cvc,exp_month:a.expMonth,exp_year:a.expYear,name:a.name,address_line1:n.street,address_line2:n.unit,address_city:n.city,address_state:n.province,address_zip:n.postalCode,address_country:n.country};return r().then(function(e){e.card.createToken(s,function(e,r){r&&r.card&&!r.error?(t.debug("Create Token response: ",r),i.resolve(r)):(console.error("Failed to get Card Token: ",r),a.tokenError=o(r&&r.error&&r.error.code),i.reject())})}),i.promise}}]),function(e){e.module("risevision.common.components.purchase-flow").factory("taxExemptionFactory",["storeService",function(e){var t={taxExemption:{}};return t.loading=!1,t.submitCertificate=function(){return t.taxExemptionError=null,t.loading=!0,e.uploadTaxExemptionCertificate(t.taxExemption.file).then(function(a){return e.addTaxExemption(t.taxExemption,a)})["catch"](function(e){t.taxExemptionError=e.message||"An error ocurred while submitting your tax exemption. Please try again."})["finally"](function(){t.loading=!1})},t}])}(angular),angular.module("risevision.common.components.purchase-flow").factory("purchaseFlowTracker",["segmentAnalytics",function(e){var t={};return t.trackProductAdded=function(t){e.track("Product Added",{id:t.productCode,name:t.name,price:t.isMonthly?t.monthly.billAmount:t.yearly.billAmount,quantity:1,category:"Plans",inApp:!1})},t.trackPlaceOrderClicked=function(t){e.track("Place Order Clicked",{amount:t.total,currency:t.currency,inApp:!1})},t.trackOrderPayNowClicked=function(t){e.track("Order Pay Now Clicked",{amount:t.total,currency:t.currency,inApp:!1})},t}]),angular.module("risevision.common.components.purchase-flow").directive("addressForm",["$templateCache","COUNTRIES","REGIONS_CA","REGIONS_US",function(e,t,a,r){return{restrict:"E",scope:{formObject:"=",addressObject:"=",hideCompanyName:"="},template:e.get("purchase-flow/address-form.html"),link:function(e){e.countries=t,e.regionsCA=a,e.regionsUS=r,e.isFieldInvalid=function(t){var a=e.formObject,r=a[t];return(r.$dirty||a.$submitted)&&r.$invalid}}}}]),angular.module("risevision.common.components.purchase-flow").directive("billingAddress",["$templateCache","purchaseFactory",function(e,t){return{restrict:"E",template:e.get("purchase-flow/checkout-billing-address.html"),link:function(e){e.billingAddress=t.purchase.billingAddress,e.contact=t.purchase.contact}}}]),angular.module("risevision.common.components.purchase-flow").directive("checkoutSuccess",["$templateCache","purchaseFactory",function(e,t){return{restrict:"E",template:e.get("purchase-flow/checkout-success.html"),link:function(e){e.purchase=t.purchase}}}]),angular.module("risevision.common.components.purchase-flow").directive("paymentMethods",["$templateCache","purchaseFactory",function(e,t){return{restrict:"E",template:e.get("purchase-flow/checkout-payment-methods.html"),link:function(e){e.paymentMethods=t.purchase.paymentMethods,e.contactEmail=t.purchase.contact.email,e.purchase=t.purchase,e.showTaxExemptionModal=t.showTaxExemptionModal,e.getCardDescription=function(e){return"***-"+e.last4+", "+e.cardType+(e.isDefault?" (default)":"")}}}}]),angular.module("risevision.common.components.purchase-flow").directive("provinceValidator",["REGIONS_CA","REGIONS_US",function(e,t){return{require:"ngModel",restrict:"A",scope:{provinceValidator:"="},link:function(a,r,n,o){var i=function(r){var n=a.provinceValidator,i=!0;return n&&("CA"===n?i=r&&_.find(e,function(e){return e[1]===r}):"US"===n&&(i=r&&_.find(t,function(e){return e[1]===r}))),o.$setValidity("validProvince",!!i),r};a.$watch("provinceValidator",function(){i(o.$modelValue)}),o.$parsers.unshift(i),o.$formatters.unshift(i)}}}]),angular.module("risevision.common.components.purchase-flow").directive("reviewPurchase",["$templateCache","userState","purchaseFactory",function(e,t,a){return{restrict:"E",template:e.get("purchase-flow/checkout-review-purchase.html"),link:function(e){e.purchase=a.purchase,e.selectedCompany=t.getCopyOfSelectedCompany(),e.getPlanPrice=function(){var t=e.purchase.plan;return t.isMonthly?t.monthly.billAmount:t.yearly.billAmount},e.getAdditionalDisplaysPrice=function(){var t=e.purchase.plan;return t.isMonthly?t.additionalDisplayLicenses*t.monthly.priceDisplayMonth:t.additionalDisplayLicenses*t.yearly.priceDisplayYear},e.showTaxExemptionModal=function(){a.showTaxExemptionModal().then(function(){a.purchase.taxExemptionSent&&a.getEstimate()})}}}}]),angular.module("risevision.common.components.purchase-flow").directive("reviewSubscription",["$templateCache","purchaseFactory",function(e,t){return{restrict:"E",template:e.get("purchase-flow/checkout-review-subscription.html"),link:function(e){e.plan=t.purchase.plan;var a=function(){var t=e.plan.additionalDisplayLicenses;return!isNaN(t)&&t%1===0&&t>=0?t:0};e.incrementLicenses=function(){e.plan.additionalDisplayLicenses=a()+1},e.decrementLicenses=function(){0===a()&&(e.plan.additionalDisplayLicenses=0),e.plan.additionalDisplayLicenses>0&&e.plan.additionalDisplayLicenses--},e.getMonthlyPrice=function(){return e.plan.monthly.billAmount+a()*e.plan.monthly.priceDisplayMonth},e.getYearlyPrice=function(){return e.plan.yearly.billAmount+a()*e.plan.yearly.priceDisplayYear}}}}]),angular.module("risevision.common.components.purchase-flow").directive("shippingAddress",["$templateCache","purchaseFactory",function(e,t){return{restrict:"E",template:e.get("purchase-flow/checkout-shipping-address.html"),link:function(e){e.shippingAddress=t.purchase.shippingAddress}}}]),angular.module("risevision.common.components.purchase-flow").directive("yearSelector",["$templateCache",function(e){return{restrict:"E",template:e.get("purchase-flow/year-selector.html"),replace:"true",scope:{ngModel:"=?"},controller:["$scope",function(e){var t=(new Date).getFullYear(),a=20;e.init=function(){e.years=[],e.ngModel&&e.ngModel<t&&e.years.push(e.ngModel.toString());for(var r=0;r<a;r++)e.years.push((t+r).toString())},e.init()}]}}]),angular.module("risevision.common.components.purchase-flow").value("PURCHASE_STEPS",[{name:"Subscription Details",index:0,formName:"reviewSubscriptionForm"},{name:"Billing Address",index:1,formName:"billingAddressForm"},{name:"Shipping Address",index:2,formName:"shippingAddressForm"},{name:"Payment Method",index:3,formName:"paymentMethodsForm"},{name:"Purchase Review",index:4}]).controller("PurchaseModalCtrl",["$scope","$modalInstance","$loading","purchaseFactory","addressFactory","PURCHASE_STEPS",function(e,t,a,r,n,o){e.form={},e.factory=r,e.PURCHASE_STEPS=o,e.currentStep=0,e.finalStep=!1,e.$watch("factory.loading",function(e){e?a.start("purchase-modal"):a.stop("purchase-modal")});var i=function(){var t=o[e.currentStep],a=t.formName,r=e.form[a];return!r||r.$valid};e.validateAddress=function(t,a,o){i()&&(r.loading=!0,n.validateAddress(t)["finally"](function(){r.loading=!1,t.validationError||(n.updateContact(a),n.updateAddress(t,a,o),e.setNextStep())}))},e.validatePaymentMethod=function(){i()&&r.validatePaymentMethod().then(e.setNextStep)},e.completePayment=function(){r.completePayment().then(function(){r.purchase.checkoutError||e.setNextStep()})},e.setNextStep=function(){i()&&(e.finalStep&&e.currentStep<3||3===e.currentStep?(e.currentStep=4,e.finalStep=!0,r.getEstimate()):e.currentStep++)},e.setPreviousStep=function(){e.currentStep>0&&e.currentStep--},e.setCurrentStep=function(t){r.purchase.checkoutError=null,e.currentStep=t},e.close=function(){r.purchase.reloadingCompany?(r.loading=!0,e.$watch("factory.purchase.reloadingCompany",function(e){e||(r.loading=!1,t.close("success"))})):t.close("success")},e.dismiss=function(){t.dismiss("cancel")}}]),angular.module("risevision.common.components.purchase-flow").controller("TaxExemptionModalCtrl",["$scope","$modalInstance","$loading","taxExemptionFactory",function(e,t,a,r){e.form={},e.factory=r,e.$watch("factory.loading",function(e){e?a.start("tax-exemption-modal"):a.stop("tax-exemption-modal")}),e.submit=function(){if(!e.form.taxExemptionForm||!e.form.taxExemptionForm.$invalid)return r.submitCertificate().then(function(){r.taxExemptionError||t.close(!0)})},e.close=function(){t.dismiss()},e.selectFile=function(){setTimeout(function(){document.querySelector("#inputExemption").click()},0)},e.setFile=function(t){e.$apply(function(){r.taxExemption.file=t.files[0]})},e.clearFile=function(){r.taxExemption.file=null,document.querySelector("#inputExemption").value=""},e.isFieldInvalid=function(t){var a=e.form.taxExemptionForm,r=a[t];return(r.$dirty||a.$submitted)&&r.$invalid}}]),angular.module("risevision.common.components.purchase-flow").filter("cardLastFour",[function(){return function(e){return e=e?e:"****",e=e.length<4?"****".substr(e.length)+e:e,e=e.length>4?e.substr(e.length-4):e,"***-"+e}}]),angular.module("risevision.common.components.purchase-flow").filter("countryName",["COUNTRIES",function(e){return function(t){for(var a=t,r=0;r<e.length;r++)if(e[r].code===t){a=e[r].name;break}return a}}]),angular.module("risevision.common.components.purchase-flow").filter("paddedMonth",[function(){return function(e){return e<10&&(e="0"+e),e}}]),function(e){try{e=angular.module("risevision.common.components.purchase-flow")}catch(t){e=angular.module("risevision.common.components.purchase-flow",[])}e.run(["$templateCache",function(e){e.put("purchase-flow/address-form.html",'<div class="form-group" ng-if="hideCompanyName !== true" ng-class="{ \'has-error\': isFieldInvalid(\'companyName\') }"><label for="address-form-companyName" class="control-label">Company Name *</label> <input id="address-form-companyName" name="companyName" type="text" class="form-control" ng-model="addressObject.name" autocomplete="organization" aria-required="true" tabindex="1" required=""></div><div class="row"><div class="col-md-6"><div class="form-group" ng-class="{ \'has-error\': isFieldInvalid(\'street\') }"><label for="address-form-streetAddress" class="control-label">Street Address *</label> <input id="address-form-streetAddress" name="street" type="text" class="form-control" ng-model="addressObject.street" autocomplete="address-line1" pattern=".{0,50}" aria-required="true" tabindex="1" required=""></div></div><div class="col-md-6"><div class="form-group"><label for="address-form-unit" class="control-label">Unit</label> <input id="address-form-unit" type="text" name="unit" class="form-control" ng-model="addressObject.unit" autocomplete="address-line2" aria-required="true" tabindex="1" pattern=".{0,100}"></div></div></div><div class="row"><div class="col-md-6"><div class="form-group" ng-class="{ \'has-error\': isFieldInvalid(\'city\') }"><label for="address-form-city" class="control-label">City *</label> <input id="address-form-city" name="city" type="text" class="form-control" ng-model="addressObject.city" autocomplete="address-level2" aria-required="true" tabindex="1" required=""></div></div><div class="col-md-6"><div class="form-group" ng-class="{ \'has-error\': isFieldInvalid(\'country\') }"><label for="address-form-country" class="control-label">Country *</label><select id="address-form-country" name="country" autocomplete="country" class="form-control" ng-model="addressObject.country" ng-options="c.code as c.name for c in countries" empty-select-parser="" aria-required="true" tabindex="1" required=""><option ng-show="false" value="">&lt; Select Country &gt;</option></select></div></div></div><div class="row"><div class="col-md-6"><div class="form-group" ng-class="{ \'has-error\': isFieldInvalid(\'province\') }"><label class="control-label">State/Province/Region <span ng-hide="addressObject.country !== \'US\' && addressObject.country !== \'CA\'">*</span></label> <label for="province" class="hidden">Enter Province or Region</label> <input name="province" type="text" class="form-control" ng-model="addressObject.province" autocomplete="address-level1" ng-show="addressObject.country !== \'US\' && addressObject.country !== \'CA\'" province-validator="addressObject.country" tabindex="1"> <label for="province-selector" class="hidden">Select Province (Canada)</label><select name="province-selector" class="form-control selectpicker" ng-model="addressObject.province" ng-options="c[1] as c[0] for c in regionsCA" autocomplete="address-level1" ng-show="addressObject.country === \'CA\'" empty-select-parser="" tabindex="1"><option ng-show="false" value="">&lt; Select Province &gt;</option></select><label for="state-selector" class="hidden">Select State (United States)</label><select name="state-selector" class="form-control selectpicker" ng-model="addressObject.province" ng-options="c[1] as c[0] for c in regionsUS" autocomplete="address-level1" ng-show="addressObject.country === \'US\'" empty-select-parser="" tabindex="1"><option ng-show="false" value="">&lt; Select State &gt;</option></select></div></div><div class="col-md-6"><div class="form-group" ng-class="{ \'has-error\': isFieldInvalid(\'postalCode\') }"><label for="address-form-postalCode" class="control-label">ZIP/Postal Code *</label> <input id="address-form-postalCode" name="postalCode" type="text" class="form-control" ng-model="addressObject.postalCode" autocomplete="postal-code" pattern=".{0,11}" aria-required="true" tabindex="1" required=""></div></div></div>')}])}(),function(e){try{e=angular.module("risevision.common.components.purchase-flow")}catch(t){e=angular.module("risevision.common.components.purchase-flow",[])}e.run(["$templateCache",function(e){e.put("purchase-flow/checkout-billing-address.html",'<div id="checkout-billing-address" class="address-editor"><form id="form.billingAddressForm" role="form" class="u_margin-md-top" name="form.billingAddressForm" autocomplete="on" novalidate=""><div class="alert alert-danger" ng-show="form.billingAddressForm.$submitted && form.billingAddressForm.$invalid">Please complete the missing information below.</div><div id="errorBox" class="alert alert-danger" role="alert" ng-show="billingAddress.validationError"><strong>Address Validation Error</strong> {{billingAddress.validationError}}</div><div class="row"><div class="col-md-6"><div class="form-group" ng-class="{ \'has-error\': (form.billingAddressForm.firstName.$dirty || form.billingAddressForm.$submitted) && form.billingAddressForm.firstName.$invalid }"><label for="contact-firstName" class="control-label">First Name *</label> <input id="contact-firstName" type="text" class="form-control" name="firstName" ng-model="contact.firstName" autocomplete="given-name" aria-required="true" tabindex="1" required=""></div></div><div class="col-md-6"><div class="form-group" ng-class="{ \'has-error\': (form.billingAddressForm.lastName.$dirty || form.billingAddressForm.$submitted) && form.billingAddressForm.lastName.$invalid }"><label for="contact-lastName" class="control-label">Last Name *</label> <input id="contact-lastName" type="text" class="form-control" name="lastName" ng-model="contact.lastName" autocomplete="family-name" aria-required="true" tabindex="1" required=""></div></div></div><div class="row"><div class="col-md-6"><div class="form-group" ng-class="{ \'has-error\': (form.billingAddressForm.email.$dirty || form.billingAddressForm.$submitted) && form.billingAddressForm.email.$invalid }"><label for="contact-email" class="control-label">Email *</label> <input id="contact-email" type="email" class="form-control" name="email" ng-model="contact.email" autocomplete="email" aria-required="true" tabindex="1" required=""></div></div><div class="col-md-6"><div class="form-group"><label for="contact-phone" class="control-label">Telephone</label> <input id="contact-phone" name="tel" type="tel" class="form-control" ng-model="contact.telephone" autocomplete="tel" tabindex="1"></div></div></div><address-form form-object="form.billingAddressForm" address-object="billingAddress"></address-form><hr><div class="row"><div class="col-xs-12"><button id="backButton" type="button" class="btn btn-default pull-left" ng-click="setPreviousStep()" ng-hide="finalStep" aria-label="Go back to Subscription Details" translate="" tabindex="2">common.back</button> <button id="continueButton" aria-label="Continue to Shipping Address" type="submit" form="form.billingAddressForm" class="btn btn-primary pull-right" ng-click="validateAddress(billingAddress, contact, false)" translate="" tabindex="1">common.continue</button></div></div></form></div>')}])}(),function(e){try{e=angular.module("risevision.common.components.purchase-flow")}catch(t){e=angular.module("risevision.common.components.purchase-flow",[])}e.run(["$templateCache",function(e){e.put("purchase-flow/checkout-payment-methods.html",'<div id="checkout-payment-methods"><form id="form.paymentMethodsForm" role="form" class="u_margin-md-top" name="form.paymentMethodsForm" novalidate=""><div class="row u_margin-md-top"><div class="col-md-8 col-xs-12 form-inline"><div class="form-group"><label for="payment-method-select" class="u_margin-right">Payment Method</label><select id="payment-method-select" class="form-control selectpicker" ng-model="paymentMethods.paymentMethod" tabindex="1"><option value="card">Credit Card</option><option value="invoice">Invoice Me</option></select></div></div></div><hr><div id="credit-card-form" ng-if="paymentMethods.paymentMethod === \'card\'"><div class="row" ng-if="false"><div class="col-md-12"><div class="form-group"><label for="credit-card-select" class="hidden">Add New Credit Card</label><select id="credit-card-select" class="form-control selectpicker" ng-model="paymentMethods.selectedCard" ng-options="c as getCardDescription(c) for c in paymentMethods.existingCreditCards track by c.id"><option value="">Add New Credit Card</option></select></div></div></div><div id="new-credit-card-form" ng-if="paymentMethods.selectedCard.isNew"><div class="alert alert-danger" ng-show="form.paymentMethodsForm.$submitted && form.paymentMethodsForm.$invalid">Please complete the missing information below.</div><div id="errorBox" class="alert alert-danger" role="alert" ng-show="paymentMethods.newCreditCard.validationErrors.length"><strong>Card Validation Error<span ng-show="paymentMethods.newCreditCard.validationErrors.length > 1">s</span></strong><ul><li ng-repeat="error in paymentMethods.newCreditCard.validationErrors">{{error}}</li></ul></div><div id="errorBox" class="alert alert-danger" role="alert" ng-show="paymentMethods.newCreditCard.tokenError"><strong>Card Processing Error</strong> {{paymentMethods.newCreditCard.tokenError}}</div><div class="row"><div class="col-md-12"><div class="form-group" ng-class="{ \'has-error\': (form.paymentMethodsForm.cardholderName.$dirty || form.paymentMethodsForm.$submitted) && form.paymentMethodsForm.cardholderName.$invalid }"><label for="new-card-name" lass="control-label">Cardholder Name *</label> <input id="new-card-name" aria-required="true" tabindex="1" type="text" class="form-control" name="cardholderName" data-stripe="name" ng-model="paymentMethods.newCreditCard.name" autocomplete="cc-name" required=""></div></div></div><div class="row"><div class="col-md-12"><div class="form-group" ng-class="{ \'has-error\': (form.paymentMethodsForm.cardNumber.$dirty || form.paymentMethodsForm.$submitted) && form.paymentMethodsForm.cardNumber.$invalid }"><label for="new-card-number" class="control-label">Card Number *</label> <input id="new-card-number" type="text" aria-required="true" tabindex="1" class="form-control" placeholder="0000 0000 0000 0000" name="cardNumber" data-stripe="number" ng-model="paymentMethods.newCreditCard.number" autocomplete="cc-number" required=""></div></div></div><div class="row"><div class="col-md-4"><div class="form-group" ng-class="{ \'has-error\': (form.paymentMethodsForm.cardExpiryMonth.$dirty || form.paymentMethodsForm.$submitted) && form.paymentMethodsForm.cardExpiryMonth.$invalid }"><label for="new-card-expiry-month" class="control-label">Expiry Month *</label><select id="new-card-expiry-month" aria-required="true" tabindex="1" class="form-control" name="cardExpiryMonth" data-stripe="exp-month" ng-model="paymentMethods.newCreditCard.expMonth" autocomplete="cc-exp-month" integer-parser="" required=""><option ng-show="false" value="">&lt; Select Month &gt;</option><option value="1">01</option><option value="2">02</option><option value="3">03</option><option value="4">04</option><option value="5">05</option><option value="6">06</option><option value="7">07</option><option value="8">08</option><option value="9">09</option><option value="10">10</option><option value="11">11</option><option value="12">12</option></select></div></div><div class="col-md-4"><div class="form-group" ng-class="{ \'has-error\': (form.paymentMethodsForm.cardExpiryYear.$dirty || form.paymentMethodsForm.$submitted) && form.paymentMethodsForm.cardExpiryYear.$invalid }"><label for="expiry-year" class="control-label">Expiry Year *</label><year-selector id="new-card-expiry-year" class="form-control" name="cardExpiryYear" data-stripe="exp-year" ng-model="paymentMethods.newCreditCard.expYear" tabindex="1" autocomplete="cc-exp-year" integer-parser="" required=""></year-selector></div></div><div class="col-md-4"><div class="form-group" ng-class="{ \'has-error\': (form.paymentMethodsForm.cardCvc.$dirty || form.paymentMethodsForm.$submitted) && form.paymentMethodsForm.cardCvc.$invalid }"><label for="new-card-cvc" class="control-label">Security Code *</label> <input id="new-card-cvc" aria-required="true" tabindex="1" type="text" pattern="[0-9]*" class="form-control" name="cardCvc" data-stripe="cvc" ng-model="paymentMethods.newCreditCard.cvc" autocomplete="cc-csc" maxlength="4" required=""></div></div></div><div class="checkbox"><label for="toggleMatchBillingAddress" aria-label="Match Billing Address"><input type="checkbox" id="toggleMatchBillingAddress" ng-model="paymentMethods.newCreditCard.useBillingAddress" tabindex="1"> Same As Billing Address</label></div><div id="new-card-address"><address-form form-object="form.paymentMethodsForm" address-object="paymentMethods.newCreditCard.address" hide-company-name="true" ng-if="!paymentMethods.newCreditCard.useBillingAddress"></address-form></div></div><div id="existing-credit-card-form" ng-if="!paymentMethods.selectedCard.isNew"><div id="errorBox" class="alert alert-danger" role="alert" ng-show="paymentMethods.selectedCard.validationErrors.length"><strong>Card Validation Error</strong> {{paymentMethods.selectedCard.validationErrors[0]}}</div><div class="row"><div class="col-md-12"><div class="form-group"><label for="existing-card-name" class="control-label">Cardholder Name</label> <input id="existing-card-name" type="text" class="form-control" placeholder="{{paymentMethods.selectedCard.name}}" tabindex="1" disabled="disabled"></div></div></div><div class="row"><div class="col-md-12"><div class="form-group"><label for="existing-card-number" class="control-label">Card Number</label> <input id="existing-card-number" type="text" class="form-control" placeholder="{{paymentMethods.selectedCard.last4 | cardLastFour}}" tabindex="1" disabled="disabled"></div></div></div><div class="row form-group"><div class="col-md-4"><div class="form-group"><label for="existing-card-expiry-month" class="control-label">Expiry Month</label> <input id="existing-card-expiry-month" type="text" class="form-control masked" placeholder="{{paymentMethods.selectedCard.expMonth | paddedMonth}}" disabled="disabled" tabindex="1"></div></div><div class="col-md-4"><div class="form-group"><label for="existing-card-expiry-year" class="control-label">Expiry Year</label> <input id="existing-card-expiry-year" type="text" class="form-control masked" placeholder="{{paymentMethods.selectedCard.expYear}}" tabindex="1" disabled="disabled"></div></div></div></div></div><div id="generateInvoice" ng-if="paymentMethods.paymentMethod === \'invoice\'"><p>If you\'d like to be invoiced for your purchase (rather than paying now by credit card), please enter a <b>Purchase Order</b> number and continue with checkout.</p><p>You will receive an invoice for this purchase total at <span class="font-weight-bold">{{contactEmail}}</span>. Invoices are due within 30 days of creation, payable by check, wire transfer, or credit card.</p><p>Please note your invoice is generated only once this checkout is completed.</p><div class="row"><div class="col-xs-12 col-sm-6"><div class="form-group"><label for="invoice-po-number" class="control-label">Purchase Order Number</label> <input id="invoice-po-number" type="text" class="form-control" name="purchaseOrder" ng-model="paymentMethods.purchaseOrderNumber" tabindex="1"></div></div></div><div id="generateInvoiceOverdue" class="hidden"><p class="text-danger">You have overdue invoice payments on your account.</p><p>In order to complete this purchase by invoice, please pay your outstanding invoices <a href="#">here</a>.</p></div></div><hr><div class="row"><div class="col-xs-12 text-center u_margin-sm-bottom"><a id="showTaxExemption" href="#" aria-label="Are you Tax Exempt?" ng-click="showTaxExemptionModal()" ng-show="!purchase.taxExemptionSent" tabindex="3" translate="">Are you Tax Exempt?</a><h5 ng-show="purchase.taxExemptionSent">Tax Exemption Submitted</h5></div></div><div class="row"><div class="col-xs-12"><button id="backButton" type="button" aria-label="Go back to Shipping Address" class="btn btn-default pull-left" ng-click="setPreviousStep()" ng-hide="finalStep" tabindex="2" translate="">common.back</button> <button id="continueButton" type="submit" aria-label="Continue to Purchase Review" form="form.paymentMethodsForm" class="btn btn-primary pull-right" ng-click="validatePaymentMethod()" tabindex="1" translate="">common.continue</button></div></div></form></div>');
}])}(),function(e){try{e=angular.module("risevision.common.components.purchase-flow")}catch(t){e=angular.module("risevision.common.components.purchase-flow",[])}e.run(["$templateCache",function(e){e.put("purchase-flow/checkout-review-purchase.html",'<div id="checkout-review-purchase"><div id="errorBox" class="alert alert-danger" role="alert" ng-show="purchase.estimate.estimateError"><div class="row"><div class="col-xs-9"><p><strong>Tax Estimate Error</strong> {{purchase.estimate.estimateError}}</p></div><div class="col-xs-3"><a class="btn btn-default btn-block" href="#" ng-click="factory.getEstimate()">Retry</a></div></div></div><div id="errorBox" class="alert alert-danger" role="alert" ng-show="purchase.checkoutError"><strong>Payment Error</strong> {{purchase.checkoutError}}</div><div class="row"><div class="col-md-6 u_margin-sm-top"><h4 class="u_margin-sm-bottom">Purchasing For</h4><span class="font-weight-bold">{{selectedCompany.name}}</span><br>Company ID: {{selectedCompany.id}}</div><div class="col-md-6 u_margin-sm-top"><h4 class="u_margin-sm-bottom">Payment Method <button aria-label="Edit Payment Method" class="btn btn-default btn-xs" ng-click="setCurrentStep(3)" tabindex="1">Edit</button></h4><div ng-show="purchase.paymentMethods.paymentMethod === \'card\'"><span class="font-weight-bold">{{purchase.paymentMethods.selectedCard.cardType}}</span><br>{{purchase.paymentMethods.selectedCard.last4 | cardLastFour}}<br>Exp: {{purchase.paymentMethods.selectedCard.expMonth | paddedMonth}}/{{purchase.paymentMethods.selectedCard.expYear}}</div><div ng-show="purchase.paymentMethods.paymentMethod === \'invoice\'"><span class="font-weight-bold">Paying by Invoice</span><br>Due Date: {{purchase.paymentMethods.invoiceDate | date: \'d-MMM-yyyy\'}} <span ng-if="purchase.paymentMethods.purchaseOrderNumber"><br>Purchase Order Number: {{purchase.paymentMethods.purchaseOrderNumber}}</span></div></div></div><div class="row"><div class="col-md-6 u_margin-sm-top"><h4 class="u_margin-sm-bottom">Billing Address <button aria-label="Edit Billing Address" class="btn btn-default btn-xs" ng-click="setCurrentStep(1)" tabindex="1">Edit</button></h4>{{purchase.contact.firstName}} {{purchase.contact.lastName}}<br>{{purchase.contact.email}}<br>{{purchase.billingAddress.name}}<br>{{purchase.billingAddress.street}}<br><span ng-show="purchase.billingAddress.unit">{{purchase.billingAddress.unit}}<br></span> {{purchase.billingAddress.city}}, <span ng-show="purchase.billingAddress.province">{{purchase.billingAddress.province}},</span> {{purchase.billingAddress.postalCode}}<br>{{purchase.billingAddress.country | countryName}}</div><div class="col-md-6 u_margin-sm-top"><h4 class="u_margin-sm-bottom">Shipping Address <button aria-label="Edit Shipping Address" class="btn btn-default btn-xs" ng-click="setCurrentStep(2)" tabindex="1">Edit</button></h4>{{purchase.shippingAddress.name}}<br>{{purchase.shippingAddress.street}}<br><span ng-show="purchase.shippingAddress.unit">{{purchase.shippingAddress.unit}}<br></span> {{purchase.shippingAddress.city}}, <span ng-show="purchase.shippingAddress.province">{{purchase.shippingAddress.province}},</span> {{purchase.shippingAddress.postalCode}}<br>{{purchase.shippingAddress.country | countryName}}</div></div><br><hr class="u_margin-xs-top u_margin-xs-bottom"><div class="row"><div class="col-xs-8"><h4 class="u_margin-sm-bottom">Subscription Details <button aria-label="Edit Subscription Details" class="btn btn-default btn-xs" ng-click="setCurrentStep(0)" tabindex="1">Edit</button></h4></div></div><div class="row"><div class="col-sm-4 col-xs-6 text-right"><p>{{purchase.plan.name}} ({{ purchase.plan.isMonthly ? \'Monthly\' : \'Yearly\' }})<br><span ng-show="purchase.plan.additionalDisplayLicenses">{{purchase.plan.additionalDisplayLicenses}} Additional Display<span ng-show="purchase.plan.additionalDisplayLicenses > 1">s</span><br></span> <span ng-repeat="tax in purchase.estimate.taxes">{{tax.taxName}}<br></span> Total Tax:</p><span class="order-total">Order Total:</span></div><div class="col-sm-4 col-xs-6 text-right"><p>${{getPlanPrice()}}<br><span ng-show="purchase.plan.additionalDisplayLicenses">${{getAdditionalDisplaysPrice()}}<br></span> <span ng-repeat="tax in purchase.estimate.taxes">${{tax.taxAmount | number:2}}<br></span> ${{purchase.estimate.totalTax | number:2}}</p><span class="order-total">${{purchase.estimate.total | number:2}} <span class="u_margin-left text-subtle">{{purchase.estimate.currency | uppercase}}</span></span></div></div><div class="row"><hr class="u_margin-sm-top"></div><div class="row"><div class="col-xs-12 text-center u_margin-sm-bottom"><a id="showTaxExemption" href="#" aria-label="Are you Tax Exempt?" ng-click="showTaxExemptionModal()" ng-show="purchase.estimate.totalTax > 0 && !purchase.taxExemptionSent" tabindex="3" translate="">Are you Tax Exempt?</a><h5 ng-show="purchase.taxExemptionSent">Tax Exemption Submitted</h5></div></div><div class="row"><div class="col-xs-8 col-xs-offset-2 u_margin-md-bottom"><button id="payButton" class="btn btn-primary btn-hg btn-block" ng-click="completePayment()" tabindex="1" aria-label="Complete Payment"><span id="payLabel" ng-if="purchase.paymentMethods.paymentMethod === \'card\'">Pay ${{purchase.estimate.total | number:2}} Now</span> <span id="invoiceLabel" ng-if="purchase.paymentMethods.paymentMethod === \'invoice\'">Invoice Me ${{purchase.estimate.total | number:2}} Now</span></button></div></div></div>')}])}(),function(e){try{e=angular.module("risevision.common.components.purchase-flow")}catch(t){e=angular.module("risevision.common.components.purchase-flow",[])}e.run(["$templateCache",function(e){e.put("purchase-flow/checkout-review-subscription.html",'<div id="checkout-review-subscription"><form id="reviewSubscriptionForm" role="form" name="form.reviewSubscriptionForm" autocomplete="on" novalidate=""><h3 class="text-center" translate="" translate-values="{ planName: plan.name }">common-header.purchase.review-subscription.plan-name</h3><div class="subscription-summary text-center"><div class="subscription-summary-item"><div class="stat"><div class="stat-value">${{plan.monthly.priceDisplayMonth}}</div><div class="stat-legend">{{ \'common-header.purchase.review-subscription.per-display\' | translate}} {{ \'common-header.purchase.review-subscription.per-month\' | translate}}</div></div></div><div class="subscription-summary-divider">x</div><div class="subscription-summary-item"><div class="stat"><div class="stat-value">{{plan.proLicenseCount}}</div><div class="stat-legend"><span ng-show="plan.proLicenseCount === 1" translate="">common-header.purchase.review-subscription.display-included</span> <span ng-show="plan.proLicenseCount > 1" translate="">common-header.purchase.review-subscription.displays-included</span></div></div></div></div><hr class="u_remove-margin"><div class="text-center flex-additive-rule"><b>+</b></div><div class="row"><div class="col-xs-12 u_margin-md-bottom" translate="" translate-values="{ planName: plan.name, priceDisplayMonth: plan.monthly.priceDisplayMonth }">common-header.purchase.review-subscription.need-more-displays</div><div class="col-xs-12"><div class="input-group spinner" ng-class="{ \'has-error\': form.reviewSubscriptionForm.additionalLicenses.$invalid }"><div class="input-group-btn-vertical"><button class="btn btn-white" type="button" ng-click="incrementLicenses()"><i class="fa fa-caret-up"></i></button> <button class="btn btn-white" type="button" ng-click="decrementLicenses()"><i class="fa fa-caret-down"></i></button></div><label for="additionalLicenses"><input id="additionalLicenses" name="additionalLicenses" type="number" class="form-control" ng-model="plan.additionalDisplayLicenses" min="0" max="999" pattern="[0-9]{1,3}" tabindex="1" aria-required="true" required=""> <span class="icon-right u_align-middle" translate="">common-header.purchase.review-subscription.additional-licenses</span></label></div></div><div class="col-xs-12"><hr></div><div class="col-xs-12 u_margin-sm-bottom"><b class="pull-left" translate="">common-header.purchase.review-subscription.total</b> <b class="pull-right" translate="">common-header.purchase.review-subscription.pay-yearly</b></div><div class="col-xs-12"><div class="panel payment-recurrence-selector" ng-class="{ \'has-error\': form.reviewSubscriptionForm.billingPeriod.$invalid }"><div class="radio" ng-class="{ active: plan.isMonthly }"><label for="monthlyBilling"><input type="radio" name="billingPeriod" id="monthlyBilling" ng-value="true" ng-model="plan.isMonthly" aria-required="true" tabindex="1" required=""> <span translate="" translate-values="{ monthlyPrice: getMonthlyPrice() }">common-header.purchase.review-subscription.billed-monthly</span></label></div><div class="radio" ng-class="{ active: !plan.isMonthly }"><label for="yearlyBilling"><input type="radio" name="billingPeriod" id="yearlyBilling" ng-value="false" ng-model="plan.isMonthly" aria-required="true" tabindex="1" required=""> <span translate="" translate-values="{ yearlyPrice: getYearlyPrice() }">common-header.purchase.review-subscription.billed-yearly</span></label><div class="label label-success" translate="" translate-values="{ saveYearly: plan.yearly.save }">common-header.purchase.review-subscription.save-yearly</div></div></div></div></div><hr><div class="row"><div class="col-xs-12"><button id="continueButton" type="submit" aria-label="Continue to Billing Address" tabindex="1" form="form.reviewSubscriptionForm" class="btn btn-primary pull-right" ng-click="setNextStep()" translate="">common.continue</button></div></div></form></div>')}])}(),function(e){try{e=angular.module("risevision.common.components.purchase-flow")}catch(t){e=angular.module("risevision.common.components.purchase-flow",[])}e.run(["$templateCache",function(e){e.put("purchase-flow/checkout-shipping-address.html",'<div id="checkout-shipping-address" class="address-editor"><form id="form.shippingAddressForm" role="form" class="u_margin-md-top" name="form.shippingAddressForm" autocomplete="on" novalidate=""><div class="alert alert-danger" ng-show="form.shippingAddressForm.$submitted && form.shippingAddressForm.$invalid">Please complete the missing information below.</div><div id="errorBox" class="alert alert-danger" role="alert" ng-show="shippingAddress.validationError"><strong>Address Validation Error</strong> {{shippingAddress.validationError}}</div><address-form form-object="form.shippingAddressForm" address-object="shippingAddress"></address-form><hr><div class="row"><div class="col-xs-12"><button id="backButton" aria-label="Go back to Billing Address" type="button" class="btn btn-default pull-left" ng-click="setPreviousStep()" ng-hide="finalStep" tabindex="2" translate="">common.back</button> <button id="continueButton" type="submit" form="form.shippingAddressForm" class="btn btn-primary pull-right" aria-label="Continue to Payment Method" ng-click="validateAddress(shippingAddress, null, true)" tabindex="1" translate="">common.continue</button></div></div></form></div>')}])}(),function(e){try{e=angular.module("risevision.common.components.purchase-flow")}catch(t){e=angular.module("risevision.common.components.purchase-flow",[])}e.run(["$templateCache",function(e){e.put("purchase-flow/checkout-success.html",'<div id="checkout-success"><h3 class="text-center u_margin-md-top" ng-if="purchase.paymentMethods.paymentMethod === \'card\'">Payment Successful</h3><h3 class="text-center u_margin-md-top" ng-if="purchase.paymentMethods.paymentMethod === \'invoice\'">Invoice Generated</h3><div class="text-center u_padding-md"><img src="https://s3.amazonaws.com/Rise-Images/Icons/online.svg" width="72px" alt="Payment Successful"><br><br><p ng-if="purchase.paymentMethods.paymentMethod === \'card\'">Your payment to Rise Vision was successful. You can keep track of your billing information in the <a ui-sref="apps.billing.home">Billing</a> section of your account.</p><p ng-if="purchase.paymentMethods.paymentMethod === \'invoice\'">An invoice for payment has been sent to <span class="font-weight-bold">{{purchase.contact.email}}</span>. Payment is due by {{purchase.paymentMethods.invoiceDate | date: \'d-MMM-yyyy\'}}. <span class="hidden">You can view this invoice <a href="#">here</a>.</span></p><br></div><hr><div class="row"><div class="col-xs-12 text-center"><button id="doneButton" class="btn btn-default" ng-click="close()" aria-label="Done" tabindex="1">Done</button></div></div></div>')}])}(),function(e){try{e=angular.module("risevision.common.components.purchase-flow")}catch(t){e=angular.module("risevision.common.components.purchase-flow",[])}e.run(["$templateCache",function(e){e.put("purchase-flow/purchase-modal.html",'<div rv-spinner="" rv-spinner-key="purchase-modal" rv-spinner-start-active="1"><div class="modal-header"><button type="button" class="close" ng-click="dismiss()" aria-label="close" tabindex="2" ng-hide="currentStep === 5"><i class="fa fa-times"></i></button><h3 class="modal-title" translate="">Checkout</h3></div><div class="steps"><div ng-repeat="step in PURCHASE_STEPS" class="step-item" ng-class="{ active: currentStep === step.index, complete: currentStep > step.index }"><span>{{step.name}}</span></div></div><div id="purchase-modal" class="modal-body checkout-modal" stop-event="touchend"><review-subscription ng-if="currentStep === 0"></review-subscription><billing-address ng-if="currentStep === 1"></billing-address><shipping-address ng-if="currentStep === 2"></shipping-address><payment-methods ng-if="currentStep === 3"></payment-methods><review-purchase ng-if="currentStep === 4"></review-purchase><checkout-success ng-if="currentStep === 5"></checkout-success></div><div id="security-branding" class="modal-footer text-center" ng-show="currentStep > 2 && currentStep < 5"><span class="text-muted"><i class="fa fa-lock icon-left"></i> Secure Checkout from ChargeBee and <img alt="powered by Stripe" height="16" src="https://s3.amazonaws.com/Rise-Images/UI/powered_by_stripe.svg"></span></div></div>')}])}(),function(e){try{e=angular.module("risevision.common.components.purchase-flow")}catch(t){e=angular.module("risevision.common.components.purchase-flow",[])}e.run(["$templateCache",function(e){e.put("purchase-flow/tax-exemption.html",'<div rv-spinner="" rv-spinner-key="tax-exemption-modal" rv-spinner-start-active="1"><div class="modal-header"><button ng-click="close()" type="button" class="close" aria-hidden="true"><i class="fa fa-times"></i></button><h3 class="modal-title">Add Tax Exemption</h3></div><div class="modal-body"><form id="form.taxExemptionForm" role="form" name="form.taxExemptionForm" class="u_margin-md-top" novalidate=""><div class="alert alert-danger" ng-show="form.taxExemptionForm.$submitted && form.taxExemptionForm.$invalid">Please complete the missing information below.</div><div class="alert alert-danger" ng-show="factory.taxExemptionError">{{factory.taxExemptionError}}</div><div class="row"><div class="col-xs-12"><div class="form-group" ng-class="{ \'has-error\': isFieldInvalid(\'number\') }"><label for="number" class="control-label">Tax Exemption Number *</label> <input name="number" id="number" type="text" class="form-control" ng-model="factory.taxExemption.number" tabindex="1" maxlength="25" required=""></div></div></div><div class="row"><div class="col-md-9"><div class="form-group" ng-class="{ \'has-error\': isFieldInvalid(\'fileName\') }"><label for="fileName" class="control-label">Tax Exemption Document (Image or PDF only) *</label> <input id="inputExemption" type="file" accept="application/pdf,image/*" onchange="angular.element(this).scope().setFile(this)" style="display:none"><div class="input-group"><input name="fileName" id="fileName" class="form-control" type="text" readonly="readonly" ng-model="factory.taxExemption.file.name" required=""> <span class="input-group-btn"><a href="#" ng-click="clearFile()" tabindex="1" class="btn btn-default"><i class="fa fa-times"></i></a></span></div></div></div><div class="col-md-3"><div class="form-group"><label for="selectFile" class="control-label col-md-6 hidden-xs">&nbsp;</label> <button name="selectFile" id="selectFile" type="button" ng-click="selectFile()" tabindex="1" class="btn btn-default col-md-9">Attach File</button></div></div></div><hr><div class="row"><div class="col-xs-12"><button type="button" ng-click="close()" aria-label="Cancel Tax Exemption" tabindex="2" class="btn btn-default pull-left" translate="">common.cancel</button> <button id="submitButton" type="submit" form="form.taxExemptionForm" ng-click="submit()" aria-label="Submit Tax Exemption" tabindex="1" class="btn btn-primary pull-right">Submit Tax Exemption</button></div></div></form></div></div>')}])}(),function(e){try{e=angular.module("risevision.common.components.purchase-flow")}catch(t){e=angular.module("risevision.common.components.purchase-flow",[])}e.run(["$templateCache",function(e){e.put("purchase-flow/year-selector.html",'<select ng-options="n as n for n in years"><option ng-show="false" value="">&lt; Select Year &gt;</option></select>')}])}();